// Функция, которая исправляет за пользователем его ввод данных таким образом,
// чтобы строка начиналась с большой буквы, независимо от того, что ввел пользователь

function capitalizeFirstLetter(str) {
  // Проверяем, что ввел пользователь
  if (!str || typeof str !== 'string') {
    // Если это не строка, то возвращается пустая строка
    return "";
  }
  
  // Если строка пустая, то она возвращается без изменений
  if (str.length === 0) {
    return str;
  }

  // Получаем первый символ строки str.charAt(0)
  // Преобразуем его в верхний регистр toUpperCase()
  // Со второго символа и до конца получаем оставшиеся символы str.slice(1)
  // И полученные оставшиеся символы переводим в нижний регистр .toLowerCase()
  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();
}

console.log(capitalizeFirstLetter("я заглавная буква"));

// ---------------------------------

// Метод, который на вход получает длинную или не очень строку и размер ограничения
// (например у нас влезает 40 символов).
// На выходе возвращает, по необходимости укороченную строку, в конце которой стоит троеточие.
// Строка не должна обрезаться посредине слова. Обрезаем строку по пробелу или по символу знака препинания (,.!?:;)/

// Проверяем длину строки
// Если не превышает заданный парамерт, то возвращаем исходную строку
function shortenString(str, maxLength) {
    if (str.length <= maxLength) {
    return str;
  }

  // Ищем последний пробел или какой нибудь знак препинания
    let lastSpaceOrPunctuation = -1;
  for (let i = maxLength - 1; i >= 0; i--) {
    if (str[i] === ' ' || ",.!?:;)/".includes(str[i])) {
      lastSpaceOrPunctuation = i;
      break;
    }
  }


  // Если строка без пробелов и знаков препинания, то обрезаем по maxLength
  // Или обрезаем по последнему пробелу или знаку препинания
  if (lastSpaceOrPunctuation === -1) {
    return str.substring(0, maxLength) + "...";
  } else {
    return str.substring(0, lastSpaceOrPunctuation + 1) + "...";
  }
}

console.log(shortenString("Господа, высокотехнологичная концепция общественного уклада говорит о возможностях прогресса профессионального сообщества.", 40));

// ---------------------------------------------------------------

// Функция, которая на вход получает 2 строки, а на выходе возвращает true/false
// в зависимости от того, является хотя бы одна из строк (не важно какая) подстрокой другой строки.
// Если да, то возвращается true.
// В противном случае - false.

// Проверяем являются ли переданные параметры строкой
// Если нет, то вернется false
function checkingSubstring(str1, str2) {
  if (typeof str1 !== 'string' || typeof str2 !== 'string') {
    return false;
  }
    // Также вернется false если одна из строк пустая
    if(!str1 || !str2){
        return false;
    }
  
  // Приводим все к нижнему регистру, чтобы поиск был корректным 
  let lowerStr1 = str1.toLowerCase();
  let lowerStr2 = str2.toLowerCase();


  return lowerStr1.includes(lowerStr2) || lowerStr2.includes(lowerStr1);
}

console.log(checkingSubstring("Привет мир", "мир"));
